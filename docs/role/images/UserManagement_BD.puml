' ===============================================
' CREATE OLTP TABLE
' ===============================================
@startuml create_table
actor admin

package PostgreSQL {
  component frontend
  entity "t_table(ext)" as ext_table
  database metadata
  database pg_catalog
  component manager

  frontend -> ext_table : CREATE EXTERNAL TABLE
  ext_table -> pg_catalog : metadata
  frontend --> metadata : metadata including\naccess privileges
  metadata --> manager
}

package OLTP as oltp {
  component ogawayama
  database t_table as t_table

  ogawayama -> t_table : Create
}

admin --> frontend : CREATE TABLE t_table TABLESPACE Tsurugi
manager --> ogawayama : metadata
frontend --> ogawayama : message\n(CREATE TABLE)
ext_table ..> t_table : Point to
@enduml

' ===============================================
' SELECT OLTP TABLE 
' ===============================================
@startuml select_table
actor user

package PostgreSQL {
  component "FDW" as fdw
  entity "t_table(ext)" as ext_table
  database pg_catalog

  ext_table --> fdw : Scan the table on OLTP
  ext_table -> pg_catalog : Confirm access privileges
}

package OLTP as oltp {
  component ogawayama
  database t_table as t_table

  ogawayama -> t_table : Scan
}

user --> ext_table : SELECT FROM t_table
fdw --> ogawayama : SELECT FROM t_table
@enduml

' ===============================================
' GRANT/REVOKE ON OLTP TABLE
' ===============================================
@startuml grant_revoke
actor admin

package PostgreSQL {
  component frontend
  component manager
  entity "t_table(ext)" as ext_table
  database pg_catalog
  database metadata

  frontend -> ext_table : GRANT/REVOKE
  ext_table -> pg_catalog : metadata
  frontend --> metadata : Update access\nprivileges of the table
  metadata --> manager
}

package OLTP {
  component ogawayama
  entity "t_table" as t_table

  ogawayama -> t_table : Grant/Revoke
}

admin --> frontend : GRANT/REVOKE privileges ON t_table
manager --> ogawayama : metadata
frontend ---> ogawayama : message(GRANT/REVOKE)
@enduml

' ===============================================
' CREATE VIEW
' ===============================================
@startuml create_view
actor user

package PostgreSQL {
  component frontend
  entity t_view
  entity "t_table(ext)" as ext_table
  database pg_catalog
  component manager
 
  frontend -- t_view : Create
  t_view -> ext_table  : Refer to
  t_view --> pg_catalog : metadata
  pg_catalog -> manager
}

package OLTP {
  component ogawayama
  database t_table
  entity "t_view" as t_view_

  ogawayama -> t_view_ : Create
  t_view_ -> t_table : Refer to
}

user --> frontend : CREATE VIEW t_view AS SELECT FROM t_table
frontend ---> ogawayama : messge(CREATE VIEW)
manager --> ogawayama : metadata
'ext_table ...> t_table : Point to
@enduml

' ===============================================
' SELECT VIEW
' ===============================================
@startuml select_view
actor user

package PostgreSQL {
  entity t_view
  entity "t_table(ext)" as ext_table
  component "FDW" as fdw
  database pg_catalog

  t_view --> ext_table : SELECT FROM t_table
  ext_table --> fdw : Scan the table on OLTP
  t_view -> pg_catalog : Confirm access privileges
  ext_table -up-> pg_catalog :  Confirm access privileges
}

package OLTP as oltp {
  component ogawayama
  database t_table as t_table

  ogawayama -> t_table : Scan
}

user --> t_view : SELECT FROM t_view
fdw --> ogawayama : SELECT FROM t_table
@enduml

' ===============================================
' CREATE ROLE
' ===============================================
@startuml role
actor admin

package PostgreSQL {
  database pg_catalog
  component frontend
  component manager
  entity role
}

package OLTP {
  component ogawayama
  entity "role" as role_
}

admin --> frontend : CREATE ROLE
frontend -> role : Create
frontend --> pg_catalog : metadata
pg_catalog --> manager
manager --> ogawayama : metadata
ogawayama -> role_ : Create
frontend --> ogawayama : message(CREATE ROLE)

@enduml

' ===============================================
' metadata
' ===============================================
@startuml metadata
actor admin
package PostgreSQL {
  component frontend
  component manager
  database metadata
  database pg_catalog
  entity table
  entity view
  entity role

  frontend --> table
  frontend --> view
  frontend --> role
  table --> metadata
  view --> pg_catalog
  role --> pg_catalog
  metadata --> manager
  pg_catalog --> manager
}

package OLTP {
  entity table_
  entity view_
  entity role_
  component ogawayama

  ogawayama --> role_ 
  ogawayama --> table_ 
  ogawayama --> view_ 
}

admin --> frontend : "CREATE/ALTER/DROP TABLE, VIEW, ROLE\nGRANT/REVOKE PRIVILEGES"
frontend -> ogawayama : message(update metadata)
manager -> ogawayama : metadata
@enduml

' ===============================================
' Authentication
' ===============================================
@startuml auth
actor user
package PostgreSQL {
  component authenticator
  database pg_catalog
}
package OLTP {
  component ogawayama
  entity batch
}

user -> ogawayama : Execute batch
authenticator <-- ogawayama : Request user authentication
authenticator -> pg_catalog : Authenticate user
ogawayama -> batch : Execute
@enduml
